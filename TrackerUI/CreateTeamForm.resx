<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIAC6BQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAwAAAAMAgGAAAAVwL5hwAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAFT0lEQVRoQ+2YX4hM
        fRjHn51/58wOO+/svrlQFEUoRYhQFFEkURQhiRBFkQvKhXLHhVKICyGKKAq5oIhSCFEuFOXCxbL7vmve
        3fmzs7vv833O73fe3zlzZuaot05b51Oa55w5O7/f9/n3e4627kJhhEYxCfU5aokFRE0sIGpiAVETC4ia
        WEDU/PYslJo+nTIrV1Jqzhwa/v6dam/eUPnOHaJaTT0RHmv1akovXEiJiRNp6ONHqj5+TIOvX6tvw/Fb
        AtoPH6bckSOsIqXuONQ+fKBfO3fS0OfP6k5zEuPGUcelS5RevFjd+Y/SxYv0z7FjoR0SOoXszZspd/So
        u/nhnh53kdTMmZS/do3aLEuuW+Hf/HB3t7KIsrt2Ue7QIXXVmlACsLExJ0+KPdLfT33r1lHPlCn0c9Ik
        qty7J/eTfJ3du1fsZljr17ubH3z5Un6nZ9o0+mvJEldIOwtIjB8vditCCUjOmEFt+bzYA6dPU/XpU7Eh
        prhvH4309ck16qIV6fnzlUX0a/t2J5IM0rD/+HGxEeX07NmO3YJwAiZMUBYv9OmTshwgYujLF7GTkyfL
        ZzOSXLAAGzdTB0CEJsnRDUMoATXuEJq0z8uJri5KTp0qthbSDP2M/J1PcHrBAmV5xTQjlAAs6ubnwYNk
        b91Kbbmc5H3H1atig+rDh/LZjIrxTP7GDUpxqqDG0FJzJ044X3BzCNtOW7bR9Ny5NObMGen/zUBqoRDD
        tL/8rVuUWbZMXQUDp6GdVh89UneCaRoBdIw/HjxouXkcQH+vWhVq8wDFW75+XV0Fg/RChFp1toYRwGHT
        +f6929srfNqiZSLf2w8ckLQZqVSob8MGGnz+XJ7xAy8P9/ZS7e1bdccL0gcOwhr4rcrt25KGmRUryN60
        yT1zENlGNdEwArJJtfki2zhpIWDg1Cka4JQC+D7R2Sm2Hxx8SJUCR8csTpMk93q9RvnKFSru30+V+/dl
        PThG047TvwGBAtAh7B07xEYxlblQTSo3byqL08xYyCTL54PG5pQJwmanCJx6pQsXHFuBswZRByjwRmkc
        KMDauNH1TOn8efk0Gfr2zT3MMsuXi2ATFL65IDagf0+D8SODomeqL14EtmBzbXvLFmV5CRSgH8YJW+WQ
        NgMbk3w1sHzXqBdMsCbZ3buVxWK4HQeB6OsB0XSqSZ0AFJb2XplTBcXlBx7PLFqkrrwpgs3avBgQr6rO
        ZKYaGoR+BmDuaVQnOn1lTY6knzoBZqjKly8ry0sGLdMYqdHytIettWvdgw15jfQASDV9P4vc943k8psB
        wInaCXZAvdUJsNRGEDr/3KPB+SAYfT+roqCjgchhcV2ICL+uBXvbNrmH010Pc1YDAXhGOyG9dKnrBI1H
        ANJHj7GVu3fl0w+mUp0++GF95CMC+IcCBujpUkPc59004tpAd0MKgdLZs873DKKIwg7CdIL/BPcIMPO6
        +uSJsrxIhFT48cNmp+gwbJ1+8LCbRvz7OF8AxJU4v/X7BLDWrFGWF5z0mrSxR+CNgPIewt9omMoYi8B7
        2IBugfqdAaln/r32IIS73mexEIFTHCM58HcqDd699Ro6whrPKFFgT6EDQUDt1St110tq3jwJJd6mZP5h
        MJ2OVaczKO7Z4xSfAsK63r1zBWJDvTyW6w43lsXortRoLEF64e8h9qfxfuIR8OfXr+4ircCkWDp3Tl05
        YzbetpB6eDH3g9zN8RsXvF7kV0bzPwBQ3BjLw/LDGF88AjBYhX0Xhffhyf8DRLTw7BkrqT+oguidNUtZ
        PgGjkbpzYLQRC4iaWEDUxAKiJhYQNbGAaCH6FxEbKAc2EypkAAAAAElFTkSuQmCC
</value>
  </data>
</root>